START

//Code Written by Johnny

SET Nbr_Elevators to 2 //number of elevators
SET Nbr_Floors to 10 //number of floors
SET Nbr_Columns to 1 
SET MinimumFloor to 1
SET MaximumFloor to 10

DEFINE Elevator
    ID: id
    SET ElevatorStatus to idle
    SET ElevatorDoor to close
    INIT Button_Nbr //number of floor within elevator
ENDDEFINE

DEFINE User
    SET Nbr_Users to 0
    INIT User_Direction //Up or down
    INIT User_Position 
ENDDEFINE

DEFINE Column USING id AND Status
    ID: id
    Status: active
    ElevatorList: SET to EMPTY List
    SEQUENCE CreateElevatorList USING Nbr_Elevators
        SET ElevatorCount equal to 1
            FOR EACH Elevator of Nbr_Elevators
                SET elevator(id: ElevatorCount) to list
                    ID: ElevatorCount   
                    ElevatorStatus: idle
                    ElevatorDoor: close
                    Elevator_Position: 1
            ENDFOR
    ENDSEQUENCE        
ENDDEFINE

SEQUENCE Elevator
    INIT Btn_Count to 0 //the number of buttons outside pressed
    INIT Elevator_Position to 1 //the floor where the elevator is
    INIT Button_Pressed to false
    IF Button_Pressed = true THEN
        CALL SEQUENCE Elevator_Priority
        CALL SEQUENCE Elevator_Direction_Priority
        CALL SEQUENCE Moving
ENDSEQUENCE 

SEQUENCE Moving
    READ User_Position //check on which floor button is pressed
        IF Elevator_Position smaller than User_Position THEN
            Elevator_Position INCREMENT by 1  //move elevator to floor where button is pressed
        ELSE IF Elevator_Position greater than User_Position THEN
            Elevator_Position INCREMENT by -1  //move elevator to floor where button is pressed
        ENDIF
ENDSEQUENCE

SEQUENCE Door
    IF Button_Pressed = true
        WHEN Elevator_Position equal User_Position   
            SET Door = true //Open Door
    ELSE
            SET Door = false
    ENDIF
ENDSEQUENCE

SEQUENCE Wait //door will wait 5 seconds before closing
    INIT Timer = 0
    IF Door = true
        REPEAT 
            Timer INCREMENT by 1
        UNTIL Timer smaller than 5    
ENDSEQUENCE

SEQUENCE Requested_Floor // Which floor button is pressed
    IF Button_Nbr greater than Elevator_Position THEN
        CALL SEQUENCE Move_Up
    ELSE IF Button_Nbr smaller than Elevator_Position THEN
        CALL SEQUENCE Move_Down
    ELSE CALL SEQUENCE Door USING Button_Nbr // When Button_Nbr = Elevator_Position, door will open
    ENDIF
ENDSEQUENCE

SEQUENCE Move_Up
    READ Button_Nbr //check which number button is pressed
        WHILE Button_Nbr greater than Elevator_Position
            Elevator_Position INCREMENT by 1 //move elevator to floor where button is pressed

ENDSEQUENCE

SEQUENCE Move_Down
    READ Button_Nbr //check which number button is pressed
        WHILE Button_Nbr smaller than Elevator_Position
            Elevator_Position INCREMENT by -1  //move elevator to floor where button is pressed
ENDSEQUENCE

SEQUENCE Elevator_Priority
    INIT Current_Elevator
    INIT Current_Floor
    INIT Other_Floor
    FOR EACH Current_Elevator in Column
        READ Elevator_Direction
        READ Elevator_Position
        READ Requested_Floor
        IF User_Direction is equal to Elevator_Direction AND Elevator with Smallest ElevatorList
            AND Current_Floor is smaller than Requested_Floor THEN  
            CALL SEQUENCE Move_Up
        ELSE IF User_Direction is equal to Elevator_Direction AND Elevator with Smallest ElevatorList
            AND Current_Floor is greater than Requested_Floor THEN
            CALL SEQUENCE Move_Down
        ELSE CALL SEQUENCE Moving
        ENDIF
ENDSEQUENCE

SEQUENCE Elevator_Direction_Priority using User_Position
    CASE Requested_Floor smaller than Elevator_Position
            AND Requested_Floor equal UP AND Elevator_Direction equal UP:
        CALL SEQUENCE Move_Up
         Requested_Floor greater than Elevator_Position
            AND Requested_Floor equal DOWN AND Elevator_Direction equal DOWN:
        CALL SEQUENCE Move_Down
    ENDCASE
ENDSEQUENCE


END